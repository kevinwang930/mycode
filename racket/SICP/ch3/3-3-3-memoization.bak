#lang racket/base
(require )
(require "3-3-3-tables.rkt")

(define  (memoize f)
  (let ((table (make-table)))
   (lambda (x)
      (let ((previously-computed-result (lookup x table)))
        (or previously-computed-result
            (let ((result (f x)))
              (insert! x result table)
              result))))))

(define(fib n)
  (cond
    ((= n 0) 0)
    ((= n 1) 1)
    (else (+ (fib(- n 1)) (fib (- n 2))))))

(define memo-fib (memoize fib))

(fib 35)
